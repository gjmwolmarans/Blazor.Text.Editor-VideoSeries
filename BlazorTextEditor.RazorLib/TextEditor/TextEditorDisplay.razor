@using System.Text
<div tabindex="-1"
     @ref="_textEditorDisplayElementReference"
     @onclick="FocusTextEditorOnClickAsync"
     @onkeydown="HandleOnKeyDown"
     @onkeydown:preventDefault="true">
    
     <button class="btn btn-primary">
          Click me
     </button>
     
     <button class="btn btn-primary"
             @onclick="ApplyRoslynSyntaxHighlightingOnClick">
          ApplyRoslynSyntaxHighlightingOnClick
     </button>
    
     @if (TextEditorStatesSelection.Value.Content.Any())
     {
          var spanBuilder = new StringBuilder();
          var currentDecorationByte = TextEditorStatesSelection.Value.Content.First().DecorationByte;
          
          foreach (var richCharacter in TextEditorStatesSelection.Value.Content)
          {
               if (currentDecorationByte == richCharacter.DecorationByte)
               {
                    spanBuilder.Append(richCharacter.Value);
               }
               else
               {
                    <span class="@GetCssClass(currentDecorationByte)">
                         @spanBuilder.ToString()
                    </span>

                    spanBuilder.Clear();
                    spanBuilder.Append(richCharacter.Value);
                    currentDecorationByte = richCharacter.DecorationByte;
               }
          }
          
          @* Final grouping of contiguous characters *@
          <span class="@GetCssClass(currentDecorationByte)">
               @spanBuilder.ToString()
          </span>
     }
</div>